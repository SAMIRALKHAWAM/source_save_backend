<?php

namespace App\Services;

use App\Enums\GroupStatusEnum;
use App\Http\Controllers\Notification\NotificationController;
use App\Http\Requests\Group\GetGroupsRequest;
use App\Models\Group;
use App\Models\User;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\Storage;

class GroupService extends BaseService
{

    protected $notification;

    public function __construct(Group $model, NotificationController $notificationController)
    {
        $this->model = $model;
        $this->notification = $notificationController;
    }

    public function create($data)
    {
        $user = \auth('user')->user();
        $fileName = 'logs/user_logs/user_' . $user->id . '.log';
        $content = "Add Group : {$data['name']} \n";
        $tokens = User::whereIn('id', $data['users'])
            ->whereNotNull('fcm_token')
            ->pluck('fcm_token')->toArray();
        Storage::append($fileName, $content);
        $this->notification->sendNotification($tokens, 'New Group ' . $data['name'], 'You are member of this group');
        return parent::create($data); // TODO: Change the autogenerated stub
    }

    public function getAll($where = [])
    {

        $request = app(GetGroupsRequest::class);
        $arr = Arr::only($request->validated(), ['status']);
        if (\request()->route()->getPrefix() == 'user_api') {
            $user = \auth('user')->user();
            $groups = Group::whereHas('GroupUsers', function ($q) use ($user) {
                $q->where('user_id', $user->id);
            });
            if (!empty($arr['status'])) {
                if ($arr['status'] == GroupStatusEnum::PENDING) {
                    $where = [
                        'approved_by' => null,
                    ];
                } else {
                    $where = [
                        ['approved_by', '!=', null]
                    ];
                }
            }
            return $groups->where($where)->get();
        }
        // if admin_api route prefix
        if (!empty($arr['status'])) {
            if ($arr['status'] == GroupStatusEnum::PENDING) {
                $where = [
                    'approved_by' => null,
                ];
            } else {
                $where = [
                    ['approved_by', '!=', null]
                ];
            }
        }
        return parent::getAll($where); // TODO: Change the autogenerated stub
    }


}
